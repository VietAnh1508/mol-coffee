/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings'
import { Route as AuthenticatedScheduleRouteImport } from './routes/_authenticated/schedule'
import { Route as AuthenticatedProfileRouteImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedPayrollRouteImport } from './routes/_authenticated/payroll'
import { Route as AuthenticatedEmployeesRouteImport } from './routes/_authenticated/employees'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedChangePasswordRouteImport } from './routes/_authenticated/change-password'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedSettingsRoute = AuthenticatedSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedScheduleRoute = AuthenticatedScheduleRouteImport.update({
  id: '/schedule',
  path: '/schedule',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedProfileRoute = AuthenticatedProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedPayrollRoute = AuthenticatedPayrollRouteImport.update({
  id: '/payroll',
  path: '/payroll',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedEmployeesRoute = AuthenticatedEmployeesRouteImport.update({
  id: '/employees',
  path: '/employees',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedChangePasswordRoute =
  AuthenticatedChangePasswordRouteImport.update({
    id: '/change-password',
    path: '/change-password',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/change-password': typeof AuthenticatedChangePasswordRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/employees': typeof AuthenticatedEmployeesRoute
  '/payroll': typeof AuthenticatedPayrollRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/schedule': typeof AuthenticatedScheduleRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/': typeof AuthenticatedIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/change-password': typeof AuthenticatedChangePasswordRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/employees': typeof AuthenticatedEmployeesRoute
  '/payroll': typeof AuthenticatedPayrollRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/schedule': typeof AuthenticatedScheduleRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/': typeof AuthenticatedIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/_authenticated/change-password': typeof AuthenticatedChangePasswordRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/employees': typeof AuthenticatedEmployeesRoute
  '/_authenticated/payroll': typeof AuthenticatedPayrollRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_authenticated/schedule': typeof AuthenticatedScheduleRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/signup'
    | '/change-password'
    | '/dashboard'
    | '/employees'
    | '/payroll'
    | '/profile'
    | '/schedule'
    | '/settings'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/signup'
    | '/change-password'
    | '/dashboard'
    | '/employees'
    | '/payroll'
    | '/profile'
    | '/schedule'
    | '/settings'
    | '/'
  id:
    | '__root__'
    | '/_authenticated'
    | '/login'
    | '/signup'
    | '/_authenticated/change-password'
    | '/_authenticated/dashboard'
    | '/_authenticated/employees'
    | '/_authenticated/payroll'
    | '/_authenticated/profile'
    | '/_authenticated/schedule'
    | '/_authenticated/settings'
    | '/_authenticated/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/schedule': {
      id: '/_authenticated/schedule'
      path: '/schedule'
      fullPath: '/schedule'
      preLoaderRoute: typeof AuthenticatedScheduleRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/payroll': {
      id: '/_authenticated/payroll'
      path: '/payroll'
      fullPath: '/payroll'
      preLoaderRoute: typeof AuthenticatedPayrollRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/employees': {
      id: '/_authenticated/employees'
      path: '/employees'
      fullPath: '/employees'
      preLoaderRoute: typeof AuthenticatedEmployeesRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/change-password': {
      id: '/_authenticated/change-password'
      path: '/change-password'
      fullPath: '/change-password'
      preLoaderRoute: typeof AuthenticatedChangePasswordRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedChangePasswordRoute: typeof AuthenticatedChangePasswordRoute
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedEmployeesRoute: typeof AuthenticatedEmployeesRoute
  AuthenticatedPayrollRoute: typeof AuthenticatedPayrollRoute
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedScheduleRoute: typeof AuthenticatedScheduleRoute
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedChangePasswordRoute: AuthenticatedChangePasswordRoute,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedEmployeesRoute: AuthenticatedEmployeesRoute,
  AuthenticatedPayrollRoute: AuthenticatedPayrollRoute,
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedScheduleRoute: AuthenticatedScheduleRoute,
  AuthenticatedSettingsRoute: AuthenticatedSettingsRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
